(**************************************************************************)
(*                                BELENIOS                                *)
(*                                                                        *)
(*  Copyright Â© 2012-2021 Inria                                           *)
(*                                                                        *)
(*  This program is free software: you can redistribute it and/or modify  *)
(*  it under the terms of the GNU Affero General Public License as        *)
(*  published by the Free Software Foundation, either version 3 of the    *)
(*  License, or (at your option) any later version, with the additional   *)
(*  exemption that compiling, linking, and/or using OpenSSL is allowed.   *)
(*                                                                        *)
(*  This program is distributed in the hope that it will be useful, but   *)
(*  WITHOUT ANY WARRANTY; without even the implied warranty of            *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU     *)
(*  Affero General Public License for more details.                       *)
(*                                                                        *)
(*  You should have received a copy of the GNU Affero General Public      *)
(*  License along with this program.  If not, see                         *)
(*  <http://www.gnu.org/licenses/>.                                       *)
(**************************************************************************)

<doc text="API-specific serializable datatypes">

type uuid <ocaml predef from="Belenios_core.Serializable_builtin"> = abstract
type template <ocaml predef from="Belenios_core.Serializable"> = abstract

type authentication =
  [ Password
  | CAS of string
  | Configured of string
  ]

type draft = {
    version : int;
    questions : template;
    languages : string list;
    ?contact : string option;
    booth : int;
    authentication : authentication;
    group : string;
} <ocaml field_prefix="draft_">

type summary = {
    uuid : uuid;
    name : string;
    date : float;
} <ocaml field_prefix="summary_">

type summary_list = summary list

type voter_list = string list

type credential_list = string list

type credentials = {
    ?token : string option;
    ?public : credential_list option;
    ?private : string list option;
} <ocaml field_prefix="credentials_">

type credential_operation =
  [ GenerateOnServer
  | SubmitPublic of credential_list
  ]

type trustee = {
    address : string;
    name : string;
    ?token : string option;
    ?state : int option;
} <ocaml field_prefix="trustee_">

type trustees = trustee list

type threshold_mode = {
    ?threshold : int option;
} <ocaml field_prefix="mode_">

type trustees_mode =
  [ Basic
  | Threshold of threshold_mode
  ]
