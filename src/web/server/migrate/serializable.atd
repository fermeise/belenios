(**************************************************************************)
(*                                BELENIOS                                *)
(*                                                                        *)
(*  Copyright Â© 2012-2022 Inria                                           *)
(*                                                                        *)
(*  This program is free software: you can redistribute it and/or modify  *)
(*  it under the terms of the GNU Affero General Public License as        *)
(*  published by the Free Software Foundation, either version 3 of the    *)
(*  License, or (at your option) any later version, with the additional   *)
(*  exemption that compiling, linking, and/or using OpenSSL is allowed.   *)
(*                                                                        *)
(*  This program is distributed in the hope that it will be useful, but   *)
(*  WITHOUT ANY WARRANTY; without even the implied warranty of            *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU     *)
(*  Affero General Public License for more details.                       *)
(*                                                                        *)
(*  You should have received a copy of the GNU Affero General Public      *)
(*  License along with this program.  If not, see                         *)
(*  <http://www.gnu.org/licenses/>.                                       *)
(**************************************************************************)

type weight <ocaml predef from="Belenios_core.Serializable_builtin"> = abstract

type shuffler = string nullable

type shuffle_hash = {
  trustee : string;
  hash : string;
  ?name : string option;
} <ocaml field_prefix="sh_">

type old_partial_decryptions = (int * string) list

type ('result, 'et, 'pd, 'sh) old_election_result = {
  ?num_tallied : weight option;
  encrypted_tally : 'et;
  ?shuffles : 'sh list option;
  ?shufflers : shuffler list option;
  partial_decryptions : 'pd list;
  result : 'result;
}

type old_election_state =
  [ Open
  | Closed
  | Shuffling
  | EncryptedTally of (int * int * string)
  | Tallied
  | Archived
  ]
